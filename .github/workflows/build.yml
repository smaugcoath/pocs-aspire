name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - feature/*
  pull_request:
    branches:
      - feature/*

permissions:
  contents: read
  packages: write

env:
  SOLUTION_FILE: "Pocs.Aspire.sln"
  REGISTRY: "ghcr.io"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # actionlint:
  #   name: Lint workflows
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run actionlint
  #       uses: raven-actions/actionlint@v2

  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ "8.0" ]
    
    steps:
     
      - uses: actions/checkout@v4

      # - uses: actions/cache@v4
      #   with:
      #     path: ~/.nuget/packages
      #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nuget-
         
      - name: Setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: Test
        env:
          ASPNETCORE_ENVIRONMENT: Development
        run: |
          dotnet test ${{ env.SOLUTION_FILE }} \
          --configuration Release \
          --no-restore --no-build \
          --logger="console;verbosity=normal" \
          --verbosity=detailed

  #     - name: Publish
  #       run: dotnet publish ${{ env.SOLUTION_FILE }} --configuration Release --no-restore --no-build

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: api-publish
  #         path: src/**/bin/Release/net*/publish

  # publish:
  #   name: Build & Push Container
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Docker BuildKit layer cache
  #       uses: actions/cache@v4
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Login GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ github.token }}

  #     - name: Build docker image
  #       run: |
  #         docker build \
  #           --cache-from type=local,src=/tmp/.buildx-cache \
  #           --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
  #           --file src/Pocs.Aspire.ApiService/Dockerfile \
  #           --tag ${{ env.REGISTRY}}/${{ github.repository }}:latest \
  #           .

  #     - name: Publish docker image
  #       run: docker push ${{ env.REGISTRY}}/${{ github.repository }}:latest
